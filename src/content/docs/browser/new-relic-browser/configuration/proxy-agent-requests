---
title: Proxy agent chunk requests and analytics data
tags:
  - Browser monitoring
  - Proxy
metaDescription: "The agent can be configured to fetch its code and send analytics through a proxy server instead of New Relic's endpoints."
---

From [version 1.240.0](https://docs.newrelic.com/docs/release-notes/new-relic-browser-release-notes/browser-agent-release-notes/) and higher, the browser agent officially allows a proxy url to be set when determining either or both of:

1. Where to fetch or lazy-load agent code. (Default: js-agent.newrelic.com CDN)
2. Where to send analytics. (Default: bam.nr-data.net)

Today, many ad-blockers and security VPNs out there block client requests to third-party domains including ours, and as the number of internet users opting into ad-blockers increase, we continue to lose observability on those devices. One solution would be to proxy those requests though an unblocked middleman. For instance, `abc.com` can send its visitor analytics through its `nrbeacon.abc.com` proxy which would not be blocked by anti-adware being that it's considered a first-party (sub)domain.

<Callout variant="important">
  This feature is currently available for those using the copy-and-paste _or_ NPM installation methods. There is no UI configuration at this time, and APM auto-injected agents are not able to use this.
</Callout>

## How to use a proxy [#use]

On the agent side, it looks at two configuration properties when determining where to fetch chunks or send data per above.

For example, using copy and paste:
```js
window.NREUM.init = {
    ...<other init properties>,
    proxy: {
        assets: <URL to fetch agent chunks>,
        beacon: <URL to send analytics>
    }
}
```

For NPM, similarly just pass in an `init` object with a proxy as part of any other configurations:
```js
new BrowserAgent({ init: { proxy: <object similar to above> } })
```

`init.proxy.assets` is used _verbatim_ in the copy-and-paste installation to fetch agent chunks. First, this implies you are hosting the file somewhere instead it being retrieved via our CDN. For example, the v1.240.0 Pro+SPA loader will require `nr-spa.___-1.240.min.js` file. If you are hosting the file on a `nrassets.abc.com` proxy, you _must_ provide this value as the URL, `'https://nrassets.abc.com/'`, including the scheme and ending slash. This is not relevant to NPM installed agents, as the main host project's bundler should take care of resources.

`init.proxy.beacon` is used by both installation to determine the host to which data such as page view timings are sent. For example, if those payloads are routed through a `nrbeacon.abc.com` proxy, then that is the exact string value to use. Note that the scheme (e.g, `'https://'`) and ending slash **should be omitted** for this property.

```js
NREUM.init = {
    proxy: {
        assets: 'https://exampleproxy.com/',
        beacon: 'exampleproxy.com'
    }
}
```

## About your proxy server [#expectations]

The New Relic browser agent team provides neither a cloud proxy service nor support on such service application. **You must make and maintain your own proxy servers.**

To that effect, some assumptions are made about your proxy that must hold true for full functionality:

1. As mentioned above, if a proxy is used to load the agent chunk(s), it must hold an exact replica of that(those) chunk(s). E.g., for v1.240.0, `
https://js-agent.newrelic.com/nr-spa.3b61d78f-1.240.0.min.js` should duplicatively exist at `
https://yourproxy.com/nr-spa.3b61d78f-1.240.0.min.js`.
2. No modification to the original client outgoing payload is made by the proxy.
3. The proxy forwards client payloads to New Relic, e.g. `https://bam.nr-data.net`.
4. Responses by the New Relic endpoints are also forwarded back to client unmodified.
5. The client IP is passed in the `X-Forwarded-For` HTTP header from the proxy to New Relic servers. This is needed for the geolocation features in New Relic to work correctly.
6. Your system has the capability and capacity to handle the amount of bandwidth and traffic generated by analytics collection.
